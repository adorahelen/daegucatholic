서비스 계층 설명
	1.	@Service:
	•	이 어노테이션은 해당 클래스가 서비스 계층의 컴포넌트임을 나타냅니다.
	•	Spring이 자동으로 빈으로 등록합니다.

	2.	@RequiredArgsConstructor:
	•	Lombok 어노테이션으로, final 필드에 대해 생성자를 자동으로 생성합니다.
	•	이를 통해 매퍼를 @Autowired 없이 DI(Dependency Injection) 방식으로 주입받을 수 있습니다.

	3.	비즈니스 로직:
	•	서비스 계층은 단순히 매퍼 호출만 하지 않고, 필요한 경우 비즈니스 로직(예: 데이터 검증, 암호화, 트랜잭션 관리 등)을 추가로 구현합니다.


	다음 단계
    	1.	컨트롤러 생성:
    	•	서비스 계층을 호출하는 REST API 또는 MVC 컨트롤러를 작성합니다.

    	2.	테스트:
    	•	각 서비스 메서드가 정상적으로 동작하는지 테스트 코드를 작성합니다.

    	3.	트랜잭션 관리:
    	•	필요에 따라 @Transactional을 사용하여 트랜잭션을 처리합니다.